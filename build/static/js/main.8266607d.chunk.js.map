{"version":3,"sources":["CircleButton/CircleButton.js","ApiContext.js","notes-helpers.js","NoteListNav/NoteListNav.js","NotePageNav/NotePageNav.js","config.js","Note/Note.js","NoteListMain/NoteListMain.js","NotePageMain/NotePageMain.js","NotefulForm/NotefulForm.js","AddFolder/AddFolder.js","AddNote/AddNote.js","App/App.js","index.js"],"names":["NavCircleButton","props","tag","className","childrenm","otherProps","Object","objectWithoutProperties","React","createElement","objectSpread","join","children","defaultProps","createContext","notes","folders","addFolder","addNote","deleteNote","findNote","arguments","length","undefined","noteId","find","note","id","NoteListNav","_this$context","this","context","_this$context$folders","_this$context$notes","react_default","a","map","folder","key","NavLink","to","concat","folderId","filter","folder_id","countNotesForFolder","name","Link","type","react_fontawesome_index_es","icon","Component","contextType","ApiContext","NotePageNav","_this","match","params","findFolder","role","onClick","history","goBack","config","API_ENDPOINT","Note","handleClickDelete","e","preventDefault","fetch","method","headers","content-type","then","res","ok","json","Promise","reject","onDeleteNote","catch","error","console","_this$props","modified","format","NoteListMain","notesForFolder","getNotesForFolder","Note_Note_Note","NotePageMain","handleDeleteNote","push","content","log","split","para","i","NotefulForm","assign","action","AddFolder","handleSubmit","target","value","body","JSON","stringify","NotefulForm_NotefulForm","onSubmit","htmlFor","AddNote","newNote","Date","App","state","handleAddFolder","setState","toConsumableArray","handleAddNote","_this2","all","_ref","_ref2","slicedToArray","notesRes","foldersRes","_ref3","_ref4","Fragment","path","Route","exact","component","Provider","renderNavRoutes","renderMainRoutes","library","add","faPlus","faChevronLeft","faTrashAlt","faCheckDouble","ReactDOM","render","BrowserRouter","src_App_App","document","getElementById"],"mappings":"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","file":"static/js/main.8266607d.chunk.js","sourcesContent":["import React from 'react'\nimport './CircleButton.css'\n\nexport default function NavCircleButton(props) {\n  const { tag, className, childrenm, ...otherProps } = props\n\n  return React.createElement(\n    props.tag,\n    {\n      className: ['NavCircleButton', props.className].join(' '),\n      ...otherProps\n    },\n    props.children\n  )\n}\n\nNavCircleButton.defaultProps ={\n  tag: 'a',\n}\n","import React from 'react'\n\nexport default React.createContext({\n  notes: [],\n  folders: [],\n  addFolder: () => {},\n  addNote: () => {},\n  deleteNote: () => {},\n})\n","\nexport const findFolder = (folders=[], folderId) =>\n  folders.find(folder => folder.id === folderId)\n\nexport const findNote = (notes=[], noteId) => (\n  notes.find(note => note.id == noteId)\n)\n\nexport const getNotesForFolder = (notes=[], folderId) => (\n  (!folderId)\n    ? notes\n    : notes.filter(note => note.folder_id == folderId)\n)\n\nexport const countNotesForFolder = (notes=[], folderId) =>\n  notes.filter(note => note.folder_id === folderId).length\n","import React from 'react'\nimport { NavLink, Link } from 'react-router-dom'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport CircleButton from '../CircleButton/CircleButton'\nimport ApiContext from '../ApiContext'\nimport { countNotesForFolder } from '../notes-helpers'\nimport './NoteListNav.css'\n\nexport default class NoteListNav extends React.Component {\n  static contextType = ApiContext;\n\n  render() {\n    const { folders=[], notes=[] } = this.context\n    return (\n      <div className='NoteListNav'>\n        <ul className='NoteListNav__list'>\n          {folders.map(folder =>\n            <li key={folder.id}>\n              <NavLink\n                className='NoteListNav__folder-link'\n                to={`/folder/${folder.id}`}\n              >\n                <span className='NoteListNav__num-notes'>\n                  {countNotesForFolder(notes, folder.id)}\n                </span>\n                {folder.name}\n              </NavLink>\n            </li>\n          )}\n        </ul>\n        <div className='NoteListNav__button-wrapper'>\n          <CircleButton\n            tag={Link}\n            to='/add-folder'\n            type='button'\n            className='NoteListNav__add-folder-button'\n          >\n            <FontAwesomeIcon icon='plus' />\n            <br />\n            Folder\n          </CircleButton>\n        </div>\n      </div>\n    )\n  }\n}\n","import React from 'react'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport CircleButton from '../CircleButton/CircleButton'\nimport ApiContext from '../ApiContext'\nimport { findNote, findFolder } from '../notes-helpers'\nimport './NotePageNav.css'\n\nexport default class NotePageNav extends React.Component {\n  static defaultProps = {\n    history: {\n      goBack: () => { }\n    },\n    match: {\n      params: {}\n    }\n  }\n  static contextType = ApiContext;\n\n  render() {\n    const { notes, folders, } = this.context\n    const { noteId } = this.props.match.params\n    const note = findNote(notes, noteId) || {}\n    const folder = findFolder(folders, note.folder_id)\n    return (\n      <div className='NotePageNav'>\n        <CircleButton\n          tag='button'\n          role='link'\n          onClick={() => this.props.history.goBack()}\n          className='NotePageNav__back-button'\n        >\n          \n          <FontAwesomeIcon icon='chevron-left' />\n          <br />\n          Back\n        </CircleButton>\n        {folder && (\n          <h3 className='NotePageNav__folder-name'>\n            {folder.name}\n          </h3>\n        )}\n      </div>\n    )\n  }\n}\n","export default {\n  API_ENDPOINT: 'http://localhost:8000'\n}\n","import React from 'react'\nimport { Link } from 'react-router-dom'\nimport { format } from 'date-fns'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport ApiContext from '../ApiContext'\nimport config from '../config'\nimport './Note.css'\n\nexport default class Note extends React.Component {\n  static defaultProps ={\n    onDeleteNote: () => {},\n  }\n  static contextType = ApiContext;\n\n  handleClickDelete = e => {\n    e.preventDefault()\n    const noteId = this.props.id\n\n    fetch(`${config.API_ENDPOINT}/notes/${noteId}`, {\n      method: 'DELETE',\n      headers: {\n        'content-type': 'application/json'\n      }\n    })\n      .then(res => {\n        if (!res.ok){\n          return res.json().then(e => Promise.reject(e))\n        }\n        return;\n      })\n      .then(() => {\n        this.context.deleteNote(noteId)\n        // allow parent to perform extra behaviour\n        this.props.onDeleteNote(noteId)\n      })\n      .catch(error => {\n        console.error({ error })\n      });\n  }\n\n  render() {\n    const { name, id, modified } = this.props\n    // console.log(`/note/${id}`)\n    return (\n      <div className='Note'>\n        <h2 className='Note__title'>\n          <Link to={`/note/${id}`}>\n            {name}\n          </Link>\n        </h2>\n        <button\n          className='Note__delete'\n          type='button'\n          onClick={this.handleClickDelete}\n        >\n          <FontAwesomeIcon icon='trash-alt' />\n          {' '}\n          remove\n        </button>\n        <div className='Note__dates'>\n          <div className='Note__dates-modified'>\n            Modified\n            {' '}\n            <span className='Date'>\n              {format(modified, 'Do MMM YYYY')}\n            </span>\n          </div>\n        </div>\n      </div>\n    )\n  }\n}\n","import React from 'react'\nimport { Link } from 'react-router-dom'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport Note from '../Note/Note'\nimport CircleButton from '../CircleButton/CircleButton'\nimport ApiContext from '../ApiContext'\nimport { getNotesForFolder } from '../notes-helpers'\nimport './NoteListMain.css'\n\nexport default class NoteListMain extends React.Component {\n  static defaultProps = {\n    match: {\n      params: {}\n    }\n  }\n  static contextType = ApiContext\n\n  render() {\n    const { folderId } = this.props.match.params\n    const { notes=[] } = this.context\n    const notesForFolder = getNotesForFolder(notes, folderId)    \n    return (\n      <section className='NoteListMain'>\n        <ul>\n          {notesForFolder.map(note =>\n            <li key={note.id}>\n              <Note\n                id={note.id}\n                name={note.name}\n                modified={note.modified}\n              />\n            </li>\n          )}\n        </ul>\n        <div className='NoteListMain__button-container'>\n          <CircleButton\n            tag={Link}\n            to='/add-note'\n            type='button'\n            className='NoteListMain__add-note-button'\n          >\n            <FontAwesomeIcon icon='plus' />\n            <br />\n            Note\n          </CircleButton>\n        </div>\n      </section>\n    )\n  }\n}\n","import React from 'react'\nimport Note from '../Note/Note'\nimport ApiContext from '../ApiContext'\nimport { findNote } from '../notes-helpers'\nimport './NotePageMain.css'\n\nexport default class NotePageMain extends React.Component {\n  static defaultProps = {\n    match: {\n      params: {}\n    }\n  }\n\n  static contextType = ApiContext\n\n  handleDeleteNote = noteId => {\n    this.props.history.push(`/`)\n  }\n\n  render() {\n    const { notes=[] } = this.context\n    const { noteId } = this.props.match.params\n    const note = findNote(notes, noteId) || { content: '' }\n    console.log(note)\n    return (\n      <section className='NotePageMain'>\n        <Note\n          id={note.id}\n          name={note.name}\n          modified={note.modified}\n          onDeleteNote={this.handleDeleteNote}\n        />\n        <div className='NotePageMain__content'>\n          {note.content.split(/\\n \\r|\\n/).map((para, i) =>\n            <p key={i}>{para}</p>\n          )}\n        </div>\n      </section>\n    )\n  }\n}\n","import React from 'react'\nimport './NotefulForm.css'\n\nexport default function NotefulForm(props) {\n  const { className, ...otherProps } = props\n  return (\n    <form\n      className={['Noteful-form', className].join(' ')}\n      action='#'\n      {...otherProps}\n    />\n  )\n}\n","import React, { Component } from 'react'\nimport NotefulForm from '../NotefulForm/NotefulForm'\nimport ApiContext from '../ApiContext'\nimport config from '../config'\nimport './AddFolder.css'\n\nexport default class AddFolder extends Component {\n  static defaultProps = {\n    history: {\n      push: () => { }\n    },\n  }\n  static contextType = ApiContext;\n\n  handleSubmit = e => {\n    e.preventDefault()\n    const folder = {\n      name: e.target['folder-name'].value\n    }\n    fetch(`${config.API_ENDPOINT}/folders`, {\n      method: 'POST',\n      headers: {\n        'content-type': 'application/json'\n      },\n      body: JSON.stringify(folder),\n    })\n      .then(res => {\n        if (!res.ok)\n          return res.json().then(e => Promise.reject(e))\n        return res.json()\n      })\n      .then(folder => {\n        this.context.addFolder(folder)\n        this.props.history.push(`/folder/${folder.id}`)\n      })\n      .catch(error => {\n        console.error({ error })\n      })\n  }\n\n  render() {\n    return (\n      <section className='AddFolder'>\n        <h2>Create a folder</h2>\n        <NotefulForm onSubmit={this.handleSubmit}>\n          <div className='field'>\n            <label htmlFor='folder-name-input'>\n              Name\n            </label>\n            <input type='text' id='folder-name-input' name='folder-name' />\n          </div>\n          <div className='buttons'>\n            <button type='submit'>\n              Add folder\n            </button>\n          </div>\n        </NotefulForm>\n      </section>\n    )\n  }\n}\n","import React, { Component } from 'react'\nimport NotefulForm from '../NotefulForm/NotefulForm'\nimport ApiContext from '../ApiContext'\nimport config from '../config'\nimport './AddNote.css'\n\nexport default class AddNote extends Component {\n  static defaultProps = {\n    history: {\n      push: () => { }\n    },\n  }\n  static contextType = ApiContext;\n\n  handleSubmit = e => {\n    e.preventDefault()\n    const newNote = {\n      name: e.target['note-name'].value,\n      content: e.target['note-content'].value,\n      folderId: e.target['note-folder-id'].value,\n      modified: new Date(),\n    }\n    fetch(`${config.API_ENDPOINT}/notes`, {\n      method: 'POST',\n      headers: {\n        'content-type': 'application/json'\n      },\n      body: JSON.stringify(newNote)\n    })\n      .then(res => {\n        if (!res.ok)\n          return res.json().then(e => Promise.reject(e))\n        return res.json()\n      })\n      .then(note => {\n        this.context.addNote(note)\n        this.props.history.push(`/folder/${note.folder_id}`)\n      })\n      .catch(error => {\n        console.error({ error })\n      })\n  }\n\n  render() {\n    const { folders=[] } = this.context\n    return (\n      <section className='AddNote'>\n        <h2>Create a note</h2>\n        <NotefulForm onSubmit={this.handleSubmit}>\n          <div className='field'>\n            <label htmlFor='note-name-input'>\n              Name\n            </label>\n            <input type='text' id='note-name-input' name='note-name' />\n          </div>\n          <div className='field'>\n            <label htmlFor='note-content-input'>\n              Content\n            </label>\n            <textarea id='note-content-input' name='note-content' />\n          </div>\n          <div className='field'>\n            <label htmlFor='note-folder-select'>\n              Folder\n            </label>\n            <select id='note-folder-select' name='note-folder-id'>\n              <option value={null}>...</option>\n              {folders.map(folder =>\n                <option key={folder.id} value={folder.id}>\n                  {folder.name}\n                </option>\n              )}\n            </select>\n          </div>\n          <div className='buttons'>\n            <button type='submit'>\n              Add note\n            </button>\n          </div>\n        </NotefulForm>\n      </section>\n    )\n  }\n}\n","import React, { Component } from 'react'\nimport { Route, Link } from 'react-router-dom'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport NoteListNav from '../NoteListNav/NoteListNav'\nimport NotePageNav from '../NotePageNav/NotePageNav'\nimport NoteListMain from '../NoteListMain/NoteListMain'\nimport NotePageMain from '../NotePageMain/NotePageMain'\nimport AddFolder from '../AddFolder/AddFolder'\nimport AddNote from '../AddNote/AddNote'\nimport ApiContext from '../ApiContext'\nimport config from '../config'\nimport './App.css'\n\nclass App extends Component {\n  state = {\n    notes: [],\n    folders: [],\n  };\n\n  componentDidMount() {\n    Promise.all([\n      fetch(`${config.API_ENDPOINT}/notes`),\n      fetch(`${config.API_ENDPOINT}/folders`)\n    ])\n      .then(([notesRes, foldersRes]) => {\n        if (!notesRes.ok)\n          return notesRes.json().then(e => Promise.reject(e))\n        if (!foldersRes.ok)\n          return foldersRes.json().then(e => Promise.reject(e))\n\n        return Promise.all([\n          notesRes.json(),\n          foldersRes.json(),\n        ])\n      })\n      .then(([notes, folders]) => {\n        this.setState({ notes, folders })\n      })\n      .catch(error => {\n        console.error({ error })\n      })\n  }\n\n  handleAddFolder = folder => {\n    this.setState({\n      folders: [\n        ...this.state.folders,\n        folder\n      ]\n    })\n  }\n\n  handleAddNote = note => {\n    this.setState({\n      notes: [\n        ...this.state.notes,\n        note\n      ]\n    })\n  }\n\n  handleDeleteNote = noteId => {\n    console.log('this is the', noteId)\n    this.setState({\n      notes: this.state.notes.filter(note => note.id !== noteId)\n    })\n  }\n\n  renderNavRoutes() {\n    return (\n      <>\n        {['/', '/folder/:folderId'].map(path =>\n          <Route\n            exact\n            key={path}\n            path={path}\n            component={NoteListNav}\n          />\n        )}\n        <Route\n          path='/note/:noteId'\n          component={NotePageNav}\n        />\n        <Route\n          path='/add-folder'\n          component={NotePageNav}\n        />\n        <Route\n          path='/add-note'\n          component={NotePageNav}\n        />\n      </>\n    )\n  }\n\n  renderMainRoutes() {\n    return (\n      <>\n        {['/', '/folder/:folderId'].map(path =>\n          <Route\n            exact\n            key={path}\n            path={path}\n            component={NoteListMain}\n          />\n        )}\n        <Route\n          path='/note/:noteId'\n          component={NotePageMain}\n        />\n        <Route\n          path='/add-folder'\n          component={AddFolder}\n        />\n        <Route\n          path='/add-note'\n          component={AddNote}\n        />\n      </>\n    )\n  }\n\n  render() {\n    const value = {\n      notes: this.state.notes,\n      folders: this.state.folders,\n      addFolder: this.handleAddFolder,\n      addNote: this.handleAddNote,\n      deleteNote: this.handleDeleteNote,\n    }\n    return (\n      <ApiContext.Provider value={value}>\n        <div className='App'>\n          <nav className='App__nav'>\n            {this.renderNavRoutes()}\n          </nav>\n          <header className='App__header'>\n            <h1>\n              <Link to='/'>Noteful</Link>\n              {' '}\n              <FontAwesomeIcon icon='check-double' />\n            </h1>\n          </header>\n          <main className='App__main'>\n            {this.renderMainRoutes()}\n          </main>\n        </div>\n      </ApiContext.Provider>\n    )\n  }\n}\n\nexport default App\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport { library } from '@fortawesome/fontawesome-svg-core'\nimport {\n  faPlus, faChevronLeft, faTrashAlt, faCheckDouble\n} from '@fortawesome/free-solid-svg-icons'\nimport { BrowserRouter } from 'react-router-dom'\nimport 'typeface-roboto'\nimport './index.css'\nimport App from './App/App'\n\nlibrary.add(faPlus, faChevronLeft, faTrashAlt, faCheckDouble)\n\nReactDOM.render(\n  <BrowserRouter>\n    <App />\n  </BrowserRouter>,\n  document.getElementById('root')\n)\n"],"sourceRoot":""}